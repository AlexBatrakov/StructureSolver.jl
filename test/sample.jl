        
    eos = PWP_EoS(low_eos=:SLy, high_eos=:SLy)
#	eos = Polytropic_EoS(1.543, 2.34)
#	eos = Table_EoS(:SLy4)
	cf = DEF1_CouplingFunction()
	model = DEFp_Model{Float64}(cf, eos)
	int_params = IntParams(1e4, 1.0, 1e-8, 1e-8)
	inparams_fixed = Dict(:φc => 0.0, :pc => 1e35)
	exparams_fixed = Dict(:α0 => -0.00, :β0 => 0.0)
	regime = Simple_DirectRegime(inparams_fixed, exparams_fixed)
	simulation = SingleSimulation(model, regime, int_params)
    calculate!(simulation)


	eos = PWP_EoS(low_eos=:SLy, high_eos=:SLy)
#	eos = Table_EoS(:SLy4)
	cf = DEF3_CouplingFunction()
	model = DEFp_Model{Float64}(cf, eos)
	int_params = IntParams(2e3, 1.0, 1e-10, 1e-10)
	inparams_fixed = Dict(:pc => 5e35)
	exparams = Dict(:α0 => -0.001, :β0 => -5.0)
	exparams_symbolic = Dict(:low_eos => :SLy, :high_eos => :SLy)
	imparams_shooting = Dict(:φc => 1e-2)
	quantities_fixed = Dict(:bc_φ∞ => 0.0)
	regime = Simple_ShootingRegime(inparams_fixed, exparams, exparams_symbolic, imparams_shooting, quantities_fixed)
	simulation = SingleSimulation(model, regime, int_params)
    calculate!(simulation)


    eos = PWP_EoS(low_eos=:SLy, high_eos=:WFF1)
#	eos = Table_EoS(:SLy4)
	cf = DEF3_CouplingFunction()
	model = DEFp_Model{Float64}(cf, eos)
	int_params = IntParams(2e3, 1.0, 1e-10, 1e-10)
	inparams_fixed = Dict{Symbol,Float64}()
	exparams = Dict(:α0 => -0.00001, :β0 => -4.80)
	exparams_symbolic = Dict(:low_eos => :SLy, :high_eos => :WFF1)
	imparams_shooting = Dict(:φc => 1e-2, :pc => 1e34)
	quantities_fixed = Dict(:bc_φ∞ => 0.0, :m̃A => 1.279907 * M_sun)
	regime = Simple_ShootingRegime(inparams_fixed, exparams, exparams_symbolic, imparams_shooting, quantities_fixed)
	simulation = SingleSimulation(model, regime, int_params)
    calculate!(simulation)


    eos = PWP_EoS(low_eos=:SLy, high_eos=:SLy)
	cf = DEF1_CouplingFunction()
	model = DEFp_Model{Float64}(cf, eos)
	int_params = IntParams(1e4, 1.0, 1e-12, 1e-12)
	inparams_fixed = Dict(:φc => 0.0, :pc => 1e35)
	exparams_fixed = Dict(:α0 => 0.0, :β0 => 0.0)
	family_params = Dict(:pc => LogRange(1e20, 1e37, 1000))
	regime = Simple_DirectRegime(inparams_fixed, exparams_fixed)
	simulation = FamilySimulation(model, regime, family_params, int_params)
    calculate!(simulation)


    eos = PWP_EoS(low_eos=:SLy, high_eos=:SLy)
	cf = DEF3_CouplingFunction()
	model = DEFp_Model{Float64}(cf, eos)
	int_params = IntParams(1e4, 1.0, 1e-9, 1e-9)
	inparams_fixed = Dict(:pc => 1e35)
	exparams = Dict(:α0 => -1e-4, :β0 => -4.0)
	exparams_symbolic = Dict(:low_eos => :SLy, :high_eos => :SLy)
	imparams_shooting = Dict(:φc => 0.1)
	quantities_fixed = Dict(:bc_φ∞ => 0.0)
	family_params = Dict(:pc => LogRange(1e34, 1e36, 100))
	regime = Simple_ShootingRegime(inparams_fixed, exparams, exparams_symbolic, imparams_shooting, quantities_fixed)
	simulation = FamilySimulation(model, regime, family_params, int_params)
    calculate!(simulation)


    eos = PWP_EoS(low_eos=:SLy, high_eos=:SLy)
	cf = DEF3_CouplingFunction()
	model = DEFp_Model{Float64}(cf, eos)
	int_params = IntParams(1e4, 1.0, 1e-11, 1e-11)
	inparams_fixed = Dict{Symbol,Float64}()
	exparams = Dict(:α0 => -1e-5, :β0 => -6.0)
	exparams_symbolic = Dict(:low_eos => :SLy, :high_eos => :SLy)
	imparams_shooting = Dict(:φc => 0.1, :pc => 1e34)
	quantities_fixed = Dict(:bc_φ∞ => 0.0, :m̃A => 1.5 * M_sun)
	family_params = Dict(:m̃A => collect(LinRange(1.0, 2.0, 100)) .* M_sun)
	regime = Simple_ShootingRegime(inparams_fixed, exparams, exparams_symbolic, imparams_shooting, quantities_fixed)
	simulation = FamilySimulation(model, regime, family_params, int_params)
    calculate!(simulation)

#---------------------------------------------------------------------------------------------------------


	model_type = DEFp_Model{Float64,DEF3_CouplingFunction,PWP_EoS}
	int_params = IntParams(maxiters=1e4, dtmax=1.0, reltol=1e-9, abstol=1e-9)
	inparams_fixed = Dict(:pc => LogRange(1e34, 1e36, 100))
	inparams_shooting = Dict(:φc => 4e-1)
	quantities_fixed = Dict(:bc_φ∞ => 0.0)
	exparams = Dict(:α0 => -1e-5, :β0 => -6.0, :low_eos => :SLy, :high_eos => :WFF1)
	regime = ShootingRegime{Float64}(inparams_fixed, inparams_shooting, quantities_fixed, exparams)
	simulation = GeneralSimulation{Float64}(model_type, regime, int_params)
    calculate!(simulation)


    model_type = DEFp_Model{Float64,DEF3_CouplingFunction,PWP_EoS}
	int_params = IntParams(maxiters=1e4, dtmax=1.0, reltol=1e-10, abstol=1e-10)
	inparams_fixed = Dict(:pc => LogRange(1e34, 1e36, 100))
	inparams_shooting = Dict(:φc => 4e-1)
	quantities_fixed = Dict(:bc_φ∞ => 0.0)
	exparams = Dict(:α0 => -1e-3, :β0 => collect(LinRange(-6.0, +6.0, 10)), :low_eos => :SLy, :high_eos => :WFF1)
	regime = ShootingRegime{Float64}(inparams_fixed, inparams_shooting, quantities_fixed, exparams)
	simulation = GeneralSimulation{Float64}(model_type, regime, int_params)
    calculate!(simulation)


    model_type = DEFp_Model{Float64,DEF3_CouplingFunction,PWP_EoS}
	int_params = IntParams(maxiters=1e4, dtmax=1.0, reltol=1e-10, abstol=1e-10)
	inparams_fixed = Dict(:pc => LogRange(1e33, 1e36, 100))
	inparams_shooting = Dict(:φc => 1e-3)
	quantities_fixed = Dict(:bc_φ∞ => 0.0)
	exparams = Dict(:α0 => -0.001, :β0 => [-4.5, -4.0, -3.0, -2.0, -1.0], :low_eos => :SLy, :high_eos => [:SLy, :ENG])
	regime = ShootingRegime{Float64}(inparams_fixed, inparams_shooting, quantities_fixed, exparams)
	simulation = GeneralSimulation{Float64}(model_type, regime, int_params)
    calculate!(simulation)
